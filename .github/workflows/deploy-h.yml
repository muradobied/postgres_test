name: Deploy to Hetzner

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USER }}/books.js:latest .
          docker push ${{ secrets.DOCKER_USER }}/books.js:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: sonarsource/sonarqube-scan-action@master
        env:
             SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
             SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          


    
      - name: Deploy to Hetzner server
        uses: appleboy/ssh-action@v1.0.0
        with:
           host: ${{ secrets.SSH_HOST }}
           username: ${{ secrets.SSH_USER }}
           key: ${{ secrets.SSH_KEY }}

           script: |  
               docker pull ${{ secrets.DOCKER_USER }}/books.js:latest &&
               docker stop booksjs || true &&
               docker rm booksjs || true &&
               docker run -d --name booksjs -p 3000:3000 ${{ secrets.DOCKER_USER }}/books.js:latest
               cat > /etc/nginx/sites-available/booksjs <<EOF
               server {
                listen 80;

                server_name books.training-devops.sociumtech.com;

                location / {
                    proxy_pass http://localhost:3000;
                    proxy_set_header Host \$host;
                    proxy_set_header X-Real-IP \$remote_addr;
                    proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto \$scheme;
                }
               }
               EOF
               ln -s /etc/nginx/sites-available/booksjs /etc/nginx/sites-enabled/
               nginx -s reload
               
     
          
